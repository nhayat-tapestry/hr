

CREATE COMPUTE MODULE ESB_TWILIO_SMS_DELETE_TwilioDelete
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		
		SET OutputRoot.Properties	= InputRoot.Properties;
		SET OutputRoot.MQMD			= InputRoot.MQMD;
		SET OutputRoot.MQRFH2		= InputRoot.MQRFH2;
		
		IF STARTSWITH(InputRoot.XMLNSC.HRISData.TMP_SMS_NUM,'555-') THEN
		 	RETURN FALSE;			
		ELSE
			DECLARE PhoneNumber 	CHARACTER;
			DECLARE PhoneNumber_SID CHARACTER;
			DECLARE PH_NUM_and_SID 	CHARACTER;
			DECLARE PH_Number 		CHARACTER;
			SET PH_Number 								= InputRoot.MQRFH2.usr.TMP_SMS_NUM;	  
			SET Environment.Variable.TMP_SMS_NUM[] 		= select T.TMP_SMS_NUM from Database.STG_HRIS_PERSON AS T where T.PERSON_ID_EXTERNAL = InputRoot.XMLNSC.HRISData.PERSON_ID_EXTERNAL;	  
			SET PH_NUM_and_SID							= Environment.Variable.TMP_SMS_NUM.TMP_SMS_NUM;
			SET PhoneNumber 							= SUBSTRING (PH_NUM_and_SID BEFORE ';');
			SET PhoneNumber_SID 						= SUBSTRING (PH_NUM_and_SID AFTER ';');			
			SET OutputRoot.MQRFH2.usr.ApiUri 			= PULLDATA_HRISCache.TWILIO_DELETE_URI|| PhoneNumber_SID;			 
			SET OutputRoot.MQRFH2.usr.MethodType 		= 'DELETE';				
			SET OutputRoot.MQRFH2.usr.Authorization 	= PULLDATA_HRISCache.TWILIO_AUTH;					
			SET OutputRoot.MQRFH2.usr.user_id 			= InputRoot.XMLNSC.HRISData.PERSON_ID_EXTERNAL;
			SET OutputRoot.MQRFH2.usr.PhoneNumber 		= PhoneNumber;
			SET OutputRoot.MQRFH2.usr.PhoneNumber_SID 	= PH_NUM_and_SID;			
			SET OutputRoot.MQRFH2.usr.Operation 		= 'TwilioDelete/';
			SET OutputRoot.MQRFH2.usr.ContentType		= 'application/x-www-form-urlencoded';											
		END IF;
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
	
	
END MODULE;
CREATE COMPUTE MODULE TWILIO_ESB_SMS_DELETE_UPDATE_HRIS
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET OutputRoot.Properties	= InputRoot.Properties;
		SET OutputRoot.MQMD			= InputRoot.MQMD;
		SET OutputRoot.MQRFH2		= InputRoot.MQRFH2;
		
		 IF (InputRoot.MQRFH2.usr.ResponseCode = '204 NO CONTENT') THEN 	 	
		 	Update Database.OUTBOUND_HRIS_USER.STG_HRIS_PERSON AS A SET TMP_SMS_NUM  = NULL where A.PERSON_ID_EXTERNAL = InputRoot.MQRFH2.usr.user_id;
		 	COMMIT;		 
		 	SET Environment.Variable.SelectQueryOutput.vw_person_esb[] 	= select * from Database.vw_person_esb AS A where A.PERSON_ID_EXTERNAL = InputRoot.MQRFH2.usr.user_id;		 
		 	SET OutputRoot.XMLNSC.HRISData[] 							= Environment.Variable.SelectQueryOutput.vw_person_esb[];	 
		 	RETURN TRUE;
		 ELSE
		 	SET OutputRoot.MQRFH2.usr.NoDeletion 						= 'Twilio Delete Operation failed for PhoneNumber and SID : ' || InputRoot.MQRFH2.usr.PhoneNumber_SID || ' : for User : ' || InputRoot.MQRFH2.usr.user_id;
		 	PROPAGATE TO TERMINAL 'out1'; 
		 END IF;
		 RETURN FALSE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;


CREATE COMPUTE MODULE ESB_TWILIO_SMS_DELETE_REM
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		
		CALL CopyMessageHeaders();
		DELETE FIELD OutputRoot.MQRFH2;
		-----REM-----
		DECLARE envRef REFERENCE TO Environment;
		CREATE NEXTSIBLING OF OutputRoot.MQMD DOMAIN 'MQRFH2';

		SET OutputRoot.MQRFH2.(MQRFH2.Field)Version = 2;
		SET OutputRoot.MQRFH2.(MQRFH2.Field)Format = 'MQHRF2';
		SET OutputRoot.MQRFH2.(MQRFH2.Field)NameValueCCSID = 1208;
		
		SET OutputRoot.MQRFH2.usr.HTTP_URL = SUBSTRING (InputRoot.HTTPInputHeader."X-Original-HTTP-Command" from 6 for 100);
		SET OutputRoot.MQRFH2.usr.PROP_CCSID = InputRoot.Properties.CodedCharSetId;
		SET OutputRoot.MQRFH2.usr.PROP_ENCOD = InputRoot.Properties.Encoding;
		SET OutputRoot.MQRFH2.usr.URI = 'xml/handshake_xml';
		SET OutputRoot.MQRFH2.usr.MethodType = 'POST';
		SET OutputRoot.MQRFH2.usr.contactEmail = InputRoot.XMLNSC.*:feed.*:entry.*:content.*:properties.*:contactEmail;
		-----REM-----
		SET OutputRoot.XMLNSC=InputRoot.XMLNSC;
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
